{{ partial "e/sass.scss" . }}

	* {
		/* use box-sizing as the default sizing model */
		box-sizing: border-box;
		scroll-margin-top: calc(var(--menubar-height) + 48px);
	}

	a {
		@include colors("a");
		@include text("a");
		border-bottom: 1px dotted var(--color-border-a);
		text-decoration: none;
		transition: all .35s;
	}
	a:hover,
	a:focus {
		@include colors("a:hover");
		transition: all .35s;
	}
	p > a,
	h1 > a,
	h2 > a,
	h3 > a,
	h4 > a,
	h5 > a {
		/* inherit text attributes from parent tag */
		font-family: inherit;
		font-weight: inherit;
		font-size: inherit;
		color: inherit;
		text-transform: inherit;
	}
	
	aside {
		@include colors("aside");
	}

	b {
		@include colors("b");
		@include text("b");
	}
	
	blockquote {
		@include colors("blockquote");
		@include topbotmargins("blockquote");
		@include text("blockquote");
		@include firstlastchildnomargin();
		border-left: 4px solid var(--color-border-blockquote);
		margin-left: 0;
		margin-right: 0;
		padding: 1em;
	}
	
	body {
		@include colors("body");
		@include text("body");
		margin: 0 auto;
		padding-top: var(--menubar-height);
		width: var(--page-width);
		@media (min-width: $gl-lg-screen) {
			--page-width: var(--page-max-width);
		}
	}

	div {
		@include colors("div");
		@include text("div");
	}	

	footer {
		@include colors("footer");
	}
	
	h1 {
		@include colors("h1");
		@include topbotmargins("h1");
		@include text("h1");
	}
	
	h2 {
		@include colors("h2");
		@include topbotmargins("h2");
		@include text("h2");
	}

	h3 {
		@include colors("h3");
		@include topbotmargins("h3");
		@include text("h3");
	}

	h4 {
		@include colors("h4");
		@include topbotmargins("h4");
		@include text("h4");
	}

	h5 {		
		@include colors("h5");
		@include topbotmargins("h5");
		@include text("h5");
	}
	
	header {
		@include colors("header");
	}

	img {
		@include img-responsive;
	}

	input {
		@include text("input");
	}
	
	li {
		@include colors("li");
		@include topbotmargins("li");
		@include text("li");
	}
	
	main {
		@include colors("main");
	}
	
	nav {
		@include colors("nav");
	}
	
	p {
		@include colors("p");
		@include topbotmargins("p");
		@include text("p");
	}
	
	section  {
		@include colors("section");
	}
	
	strong {
		@include colors("b");
		@include text("b"); /* "b" because used as synonym of <b> */
	}
	
	textarea {
		@include text("textarea");
	}

	time {
		@include colors("time");
	}
	
	ul {
		@include topbotmargins("ul");
		list-style-type: var(--list-style-type-ul);
		padding-left: var(--padding-left-ul);
	}

	.cl-core--button-primary {
		@include colors("button-primary");
		@include topbotmargins("button-primary");
		@include text("button-primary");
		border: none;
		border-radius: 0.5em;
		display: inline-block;
		list-style: none; /* remove bullet when used on li */
		margin-left: auto;
		margin-right: auto;
		padding: 1em 2em;
		
		&:hover {
			@include colors("button-primary-hover");
			transition: background-color .5s;
			cursor: pointer;
		}
	}
	
	.cl-core--button-secondary {
		@include colors("button-secondary");
		@include topbotmargins("button-secondary");
		@include text("button-secondary");
		border: none;
		border-radius: 0.5em;
		display: inline-block;
		list-style: none; /* remove bullet when used on li */
		padding: 0;
		
		&:hover {
			@include colors("button-secondary-hover");
			transition: background-color .5s;
			cursor: pointer;
		}
	}

	/* content helper classes */
	.st-border {
		border: 1px solid var(--color-border);
	}
	
	.st-center {
		text-align: center;
	}
	
	.st-icon {
		width: 3em;
	}

	/*
		color scheme helper classes
		create bg-color-scheme classes from /data/colorschemes.yaml
		for example, a helper class ".bg-black" will be created for the color scheme named "black"
	*/
	{{ range $key, $value := site.Data.colorschemes }}
		{{ if strings.Contains $key "bg-" }}
			{{ $class := printf ".%s" $key }}
			{{ $class }} {
				{{ partial "e/colorscheme.scss" $key }}
			}
		{{ end }}
	{{ end }}
