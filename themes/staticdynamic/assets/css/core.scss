{{ partial "e/sass.scss" . }}

	:root {
		{{ partial "e/scheme.scss" "root" }};
	}

	* {
		/* use box-sizing as the default sizing model */
		box-sizing: border-box;
		scroll-margin-top: calc(var(--menubar-height) + 48px);
	}

	a {
		border-bottom: 1px dotted var(--color-primary); /* use stylized dotted underline for links */
		transition: all .35s;
		color: inherit;
		font-family: inherit;
		font-weight: inherit;
		font-size: inherit;
		text-decoration: none; /* remove default underline */
		text-transform: inherit;
		
		{{ partial "e/scheme-variables.scss" "a" }}
		{{ partial "e/scheme.scss" "a" }}
	}
	a:hover,
	a:focus {
		color: var(--color-text-hover);
		
		transition: all .35s;
		
	}
	
	aside {
		{{ partial "e/scheme-variables.scss" "aside" }}
		{{ partial "e/scheme.scss" "aside" }}
	}

	b {
		{{ partial "e/scheme-variables.scss" "b" }}		
		{{ partial "e/scheme.scss" "b" }}
	}
	
	blockquote {
		@include firstlastchildnomargin();
		
		border-left: 4px solid var(--color-border);
		margin-left: 0;
		margin-right: 0;
		padding: 1em;
		
		{{ partial "e/scheme-variables.scss" "blockquote" }}
		{{ partial "e/scheme.scss" "blockquote" }}
	}
	
	body {
		@include flex-row($wrap: "wrap");
		
		margin: 0 auto;
		padding-top: var(--menubar-height);
		width: var(--page-width);
		
		@media (min-width: $gl-lg-screen) {
			--page-width: var(--page-max-width);
		}
		
		{{ partial "e/scheme.scss" "body" }}
	}

	div {
		{{ partial "e/scheme-variables.scss" "div" }}
		{{ partial "e/scheme.scss" "div" }}
	}	

	footer {
		{{ partial "e/scheme-variables.scss" "footer" }}
		{{ partial "e/scheme.scss" "footer" }}
	}
	
	h1 {
		{{ partial "e/scheme-variables.scss" "h1" }}
		{{ partial "e/scheme.scss" "h1" }}
	}
	
	h2 {
		{{ partial "e/scheme-variables.scss" "h2" }}		
		{{ partial "e/scheme.scss" "h2" }}
	}

	h3 {
		{{ partial "e/scheme-variables.scss" "h3" }}		
		{{ partial "e/scheme.scss" "h3" }}
	}

	h4 {
		{{ partial "e/scheme-variables.scss" "h4" }}
		{{ partial "e/scheme.scss" "h4" }}
	}

	h5 {
		{{ partial "e/scheme-variables.scss" "h5" }}
		{{ partial "e/scheme.scss" "h5" }}
	}
	
	header {
		{{ partial "e/scheme-variables.scss" "" }}
		{{ partial "e/scheme.scss" "header" }}
	}

	img {
		{{ partial "e/scheme-variables.scss" "img" }}
		{{ partial "e/scheme.scss" "img" }}
	}

	input {
		{{ partial "e/scheme-variables.scss" "input" }}
		{{ partial "e/scheme.scss" "input" }}
	}
	
	li {
		{{ partial "e/scheme-variables.scss" "li" }}
		{{ partial "e/scheme.scss" "li" }}
	}
	
	main {
		{{ partial "e/scheme-variables.scss" "main" }}
		{{ partial "e/scheme.scss" "main" }}
	}
	
	nav {
		{{ partial "e/scheme-variables.scss" "nav" }}
		{{ partial "e/scheme.scss" "nav" }}
	}

	p {
		{{ partial "e/scheme-variables.scss" "p" }}
		{{ partial "e/scheme.scss" "p" }}
	}
	
	section  {
		{{ partial "e/scheme-variables.scss" "section" }}
		{{ partial "e/scheme.scss" "section" }}
	}

	span {
		{{ partial "e/scheme-variables.scss" "span" }}
		{{ partial "e/scheme.scss" "span" }}
	}
	
	strong {
		{{ partial "e/scheme-variables.scss" "strong" }}
		{{ partial "e/scheme.scss" "strong" }}
	}
	
	textarea {
		{{ partial "e/scheme-variables.scss" "textarea" }}
		{{ partial "e/scheme.scss" "textarea" }}
	}

	time {
		{{ partial "e/scheme-variables.scss" "time" }}
		{{ partial "e/scheme.scss" "time" }}
	}

	table {
		border: 1px solid var(--color-border);
		border-collapse: collapse;
		
		{{ partial "e/scheme-variables.scss" "table" }}
		{{ partial "e/scheme.scss" "table" }}
	}
	
	td {
		border: 1px solid var(--color-border);
		
		{{ partial "e/scheme-variables.scss" "td" }}
		{{ partial "e/scheme.scss" "td" }}
	}
	
	th {
		border: 1px solid var(--color-border);
		
		{{ partial "e/scheme-variables.scss" "th" }}
		{{ partial "e/scheme.scss" "th" }}
	}

	ul {
		list-style-type: var(--list-style-type);
		list-style-position: inside;
		padding-left: var(--list-indent);
		text-indent: calc( var(--list-indent) * -1 );
		
		{{ partial "e/scheme-variables.scss" "ul" }}
		{{ partial "e/scheme.scss" "ul" }}
	}
	
	.cl-core--button-primary {
		@include a-underline-none();
		border: none;
		border-radius: 0.5em;
		display: inline-block;
		list-style: none; /* remove bullet when used on li */
		padding: var(--padding);
		
		&:hover {
			padding: var(--padding);
			background-color: var(--color-back-hover);
			color: var(--color-text-hover);
			transition: background-color .5s;
			cursor: pointer;
		}
		
		{{ partial "e/scheme-variables.scss" "button-primary" }}
		{{ partial "e/scheme.scss" "button-primary" }}
	}
	
	.cl-core--button-secondary {
		@include a-underline-none();
		border: none;
		border-radius: 0.5em;
		display: inline-block;
		list-style: none; /* remove bullet when used on li */
		padding: var(--padding);
		
		&:hover {
			background-color: var(--color-back-hover);
			color: var(--color-text-hover);
			
			transition: background-color .5s;
			cursor: pointer;
		}
		
		{{ partial "e/scheme-variables.scss" "button-secondary" }}
		{{ partial "e/scheme.scss" "button-secondary" }}
	}

	.cl-core--a-underline-none {
		/*
			Removes underline from hypertext links
			Alternatively, include the a-underline-none mixin in the css.
		*/
		@include a-underline-none();
	}
	
	/* content helper classes */
	.st-border {
		border: 1px solid var(--color-border);
	}
	
	.st-center {
		text-align: center;
	}
	
	.st-icon {
		width: 3em;
	}

	/*
		color scheme helper classes
		create bg-color-scheme classes from /data/colorschemes.yaml
		for example, a helper class ".bg-black" will be created for the color scheme named "black"
	*/
	{{ range $key, $value := site.Data.colorschemes }}
		{{ if strings.Contains $key "bg-" }}
			{{ $class := printf ".%s" $key }}
			{{ $class }} {
				{{ partial "e/colorscheme.scss" $key }}
			}
		{{ end }}
	{{ end }}
