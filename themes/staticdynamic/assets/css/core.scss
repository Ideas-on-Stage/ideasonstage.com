{{ partial "e/sass.scss" . }}

	/*
		font families
	*/
	a,
	body,
	input,
	li,
	p,
	span,
	textarea {
		font-family: var(--font-family);
		font-weight: var(--font-weight);
	}

	b,
	blockquote,
	strong {
		font-family: var(--font-family-b);
		font-weight: var(--font-weight-b);
	}
	
	h1,
	h2,
	h3,
	h4,
	h5 {
		font-family: var(--font-family-h);
		font-weight: var(--font-weight-h);
	}
	
	/*
		tag specific properties, in particular:
		margin-top, margin-bottom, font-size, line-height, text-align, text-transform
		but other properties can be declared here
	*/
	a,
	blockquote,
	body,
	input,
	li,
	p,
	strong,
	textarea {
		font-size: calc(var(--font-size) * var(--font-ratio));
		text-align: var(--text-align);
		text-transform: var(--text-transform);
	}
	
	blockquote {
		@include firstlastchildnomargin();
		margin-top: var(--margin-top-blockquote);
		margin-bottom: var(--margin-bottom-blockquote);
		margin-left: 0;
		margin-right: 0;
		padding: 1em;
		
		background-color: var(--color-blockquote-back);
		border-left: 4px solid var(--color-blockquote-border);
		color: var(--color-blockquote);
		line-height: var(--line-height-blockquote);
	}
	
	li {
		margin-top: var(--margin-top-li);
		margin-bottom: var(--margin-bottom-li);
		line-height: var(--line-height-li);		
		background-color: var(--color-li-back);
		
		a {
			border-bottom: dotted 1px var(--color-link-hover);
		}		
	}
	
	p,
	p a {
		margin-top: var(--margin-top-p);
		margin-bottom: var(--margin-bottom-p);
		line-height: var(--line-height-p);		
	}
	
	h1 {
		margin-top: var(--margin-top-h1);
		margin-bottom: var(--margin-bottom-h1);
		font-size: calc(var(--font-size-h1) * var(--font-ratio));
		line-height: var(--line-height-h1);
		text-align: var(--text-align-h1);
		text-transform: var(--text-transform-h1);
	}
	
	h2 {
		margin-top: var(--margin-top-h2);
		margin-bottom: var(--margin-bottom-h2);
		font-size: calc(var(--font-size-h2) * var(--font-ratio));
		line-height: var(--line-height-h2);
		text-align: var(--text-align-h2);
		text-transform: var(--text-transform-h2);
	}
	
	h3 {
		margin-top: var(--margin-top-h3);
		margin-bottom: var(--margin-bottom-h3);
		font-size: calc(var(--font-size-h3) * var(--font-ratio));
		line-height: var(--line-height-h3);
		text-align: var(--text-align-h3);
		text-transform: var(--text-transform-h3);
	}
	
	h4 {
		margin-top: var(--margin-top-h4);
		margin-bottom: var(--margin-bottom-h4);
		font-size: calc(var(--font-size-h4) * var(--font-ratio));
		line-height: var(--line-height-h4);
		text-align: var(--text-align-h4);
		text-transform: var(--text-transform-h4);
	}
	
	h5 {
		margin-top: var(--margin-top-h5);
		margin-bottom: var(--margin-bottom-h5);
		font-size: calc(var(--font-size-h5) * var(--font-ratio));
		line-height: var(--line-height-h5);
		text-align: var(--text-align-h5);
		text-transform: var(--text-transform-h5);
	}

	img {
		margin-top: var(--margin-top-img);
		margin-bottom: var(--margin-bottom-img);
		max-width: 100%;
	}
	
	ul {
		list-style-type: var(--list-style-type-ul);
	}

	/*
		element sizes (padding, margin, sizes)
	*/
	* {
		/* use box-sizing as the default sizing model */
		box-sizing: border-box;
	}

	body {
		scroll-padding-top: var(--menubar-height);
		padding-top: var(--page-padding-top);
		padding-right: var(--page-padding-right);
		padding-bottom: var(--page-padding-bottom);
		padding-left: var(--page-padding-left);
		max-width: var(--page-max-width);
		margin: auto;
	}
	
	article,
	aside,
	div,
	section {
		scroll-margin-top: calc( var(--menubar-height) * 2 );
	}
	
	a {
		color: var(--color-link);
		border-bottom: none;
		text-decoration: none;
		transition: all .35s;
	}
	
	a:hover,
	a:focus {
		color: var(--color-link-hover);
		border-bottom: none;
		text-decoration: none;
		transition: all .35s;
	}

	a img {
		border: none;
	}

	h1,
	h2,
	h3,
	h4 {
		scroll-margin-top: calc(var(--menubar-height) + 48px);
	}

	img {
		@include img-resp;
	}	

	/*
		colors
		by using a variable for color elements,
		we can declare the color once and for all,
		and change it by changing the variable value based on class/context
		this allows to use color schemes very easily
	*/
	aside,
	div,
	footer,
	header,
	nav,
	section {
		background-color: var(--color-back);
	}

	a {
		color: var(--color-link);
	}

	
	a:hover,
	a:focus {
		color: var(--color-link-hover);
	}
	
	h1,
	h2,
	h3,
	h4,
	h5,
	li,
	ol,
	p,
	ul,
	blockquote {
		color: var(--color-text);
	}

	time {
		color: var(--color-time);
	}



	/* 
		buttons
		primary buttons are very visible,
		secondary buttons are a bit more understated
	*/
	.cl-core--button-primary {
		display: inline-block;
		margin-top: var(--margin-top-button-primary);
		margin-bottom: var(--margin-bottom-button-primary);
		margin-left: auto;
		margin-right: auto;
		padding: 1em 2em;
		max-width: 90vw;
		
		background-color: var(--color-button-primary-back);
		border: none;
		border-radius: 0.5em;
		color: var(--color-button-primary-text);
		font-family: var(--font-family-button);
		font-weight: var(--font-weight-button);
		font-size: calc(var(--font-size-button-primary) * var(--font-ratio));
		line-height: var(--line-height-button-primary);
		list-style: none; /* remove bullet when used on li */
		text-align: var(--text-align-button-primary);
		text-transform: var(--text-transform-button-primary);
		
		&:hover {
			background-color: var(--color-button-primary-back-hover);
			color: var(--color-button-primary-text-hover);
			transition: background-color .5s;
			cursor: pointer;
		}
	}
	
	.cl-core--button-secondary {
		display: inline-block;
		margin-top: var(--margin-top-button-secondary);
		margin-bottom: var(--margin-bottom-button-secondary);
		padding: 0;
		
		background-color: var(--color-button-secondary-back);
		border: none;
		border-radius: 0.5em;
		color: var(--color-button-secondary-text);
		font-family: var(--font-family-button);
		font-weight: var(--font-weight-button);
		font-size: calc(var(--font-size-button-secondary) * var(--font-ratio));
		line-height: var(--line-height-button-secondary);
		list-style: none; /* remove bullet when used on li */
		text-align: var(--text-align-button-primary);
		text-transform: var(--text-transform-button-secondary);
		
		&:hover {
			background-color: var(--color-button-secondary-back-hover);
			color: var(--color-button-secondary-text-hover);
			transition: background-color .5s;
			cursor: pointer;
		}
	}

	/* content helper classes */
	.st-border {
		border: 1px solid var(--color-border);
	}
	
	.st-center {
		text-align: center;
	}

	/*
		color scheme helper classes
		create bg-color-scheme classes from /data/colorschemes.yaml
		for example, a helper class ".bg-black" will be created for the color scheme named "black"
	*/
	{{ range $key, $value := site.Data.colorschemes }}
		{{ if not (partial "f/isstring.go" $value) }}
			{{ $class := printf ".bg-%s" $key }}
			{{ $class }} {
				{{ partial "e/colorscheme.scss" $key }}
			}
		{{ end }}
	{{ end }}
