{{/* <!--
	
	e/scheme.scss

	Used in .scss files to add a scheme to a css class.
	- The list of elements to insert in the class is retrieved from /data/schemes.yaml
	- Then each element is inserted into the css class
	
	Arguments:
	- block name as string
	
--> */}}

{{/* <!-- try to get the text scheme matching the block name --> */}}
{{- $element := . -}}
{{- if or (eq "" $element) (eq "generic" $element) -}}
	{{- $element = "" -}}
{{- else -}}
	{{- $element = printf "%s-" $element -}}
{{- end -}}

{{/* <!-- "generic" variable properties, applicable to all elements --> */}}
{{- printf "background-color: var(--%scolor-back);" $element -}}
{{- printf "color: var(--%scolor-text);" $element -}}
{{- printf "text-align: var(--%stext-align);" $element -}}


{{/* <!-- "specific" variable properties, applicable to elements that are not "generic" --> */}}
{{/* <!-- They are not generic because applying a generic padding and margin leads to too many problems --> */}}
{{- if ne "" $element -}}
	{{- printf "font-family: var(--%sfont-family);" $element -}}
	{{- printf "font-weight: var(--%sfont-weight);" $element -}}
	{{- printf "font-size: calc(var(--%sfont-ratio) * var(--font-base-size));" $element -}}
	{{- printf "line-height: var(--%sline-height);" $element -}}
	{{- printf "text-transform: var(--%stext-transform);" $element -}}
	{{- printf "padding-top: var(--%spadding-top);" $element -}}
	{{- printf "padding-bottom: var(--%spadding-bottom);" $element -}}
	{{- printf "padding-left: var(--%spadding-left);" $element -}}
	{{- printf "padding-right: var(--%spadding-right);" $element -}}
	{{- printf "margin-top: var(--%smargin-top);" $element -}}
	{{- printf "margin-bottom: var(--%smargin-bottom);" $element -}}
	{{/* <!-- no margin-left or margin-right as it is used to align elements --> */}}
	{{/* <!-- including it in the scheme could cause layout issues --> */}}
{{- end -}}
